version: 2.1

jobs:
  test:
    resource_class: medium
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: Intall dependencies
          command: sh ./tools/prepare_env_for_tests.sh
      - run:
          name: Run test
          command: npm run test
      - run:
          name: Generate and copy reports
          command: |
            npm run generate-allure-report
            sudo cp -R coverage /tmp/artifacts || true
            sudo cp -R allure-report /tmp/artifacts || true
          when: always
      - store_artifacts:
          path: /tmp/artifacts
  compile:
    resource_class: medium
    docker:
      - image: cimg/node:18.7.0
    steps:
      - checkout
      - run:
          name: Intall dependencies
          command: npm install
      - run:
          name: Compile the javascript code
          command: npm run build

  build_and_publish:
    resource_class: medium
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: sh ./tools/install_dependencies.sh      
      - run:
          name: Intall node dependencies
          command: npm install
      - run:
          name: Build dev environment
          command: npm run build
      - run:
          name: Zip and Publish to Octopus dev build
          command: |
            cp ./public/robots.txt ./build
            cp ./public/manifest.json ./build
            cp ./public/logo192.png ./build
            cp ./public/logo512.png ./build            
            zip -r build.1.0.0-${CIRCLE_BUILD_NUM}.zip ./build 
            curl -X POST ${OCTOPUS_API_URL} -H "X-Octopus-ApiKey: ${OCTOPUS_API_KEY}" -F "data=@build.1.0.0-${CIRCLE_BUILD_NUM}.zip" 
      - run:
          name: Remove dev build
          command: |
             rm -r build      
      - run:
          name: Build prod environment
          command: npm run build-prod     
      - run:
          name: Zip and Publish to Octopus prod build
          command: |
            cp ./public/robots.txt ./build
            cp ./public/manifest.json ./build
            cp ./public/logo192.png ./build
            cp ./public/logo512.png ./build            
            zip -r build-prod.1.0.0-${CIRCLE_BUILD_NUM}.zip ./build 
            curl -X POST ${OCTOPUS_API_URL} -H "X-Octopus-ApiKey: ${OCTOPUS_API_KEY}" -F "data=@build-prod.1.0.0-${CIRCLE_BUILD_NUM}.zip" 
      - run:
          name: Success build notify
          command: ./tools/notify.sh success 'Buy IT FE'
          when: on_success
      - run:
          name: Failed build notify
          command: ./tools/notify.sh failed 'Buy IT FE'
          when: on_fail

workflows:
  version: 2
  build:
    jobs:
      - test
      - compile
      - build_and_publish:
          context: 
            - OCTOPUS    
            - SLACK    
          filters:
            branches:
              only: master      
